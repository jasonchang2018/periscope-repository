-- --yes_cache
select
	c_a.id as application
	, p_aa.appldate

  -- the latest occuring UW who shows up in CL.ASH, and the timestamp of this occurrence
	, c_ash_uw.name as decisionadmin
	, p_aa.decisiondate

  -- when CL.ASH.createdbyid is an UW when old_value = 'BVC' --> new_value = 'N-SG'
	, case when c_ash_ms.manual_scorecard = 1 then 1 else 0 end as manual_scorecard --

  -- when CL.task is created by an UW and the description is neither NULL nor a 'REMINDER'
	, case when c_t_kickback.kickback = 1 then 1 else 0 end as kickback --
	
  -- sum distinct in CL.app_ss (to remove dups) group by app
  , c_s.uwscore

  -- first time an app reaches 'UW Queue' owner in CL.AH, and whether it does reach this point
	, c_ah_uwq.time_sent_UW --
	, case when c_ah_uwq.time_sent_UW isnull then 0 else 1 end as sent_to_UWQ --

  
  --, c_ei.monthly_income
	 
	
from 
  public.all_allapps as p_aa
	
	
  right join 
    cloudlending.applications as c_a
    on c_a.name = p_aa.loanid 

  left join 
    (select 
      *
     from 
        (select 
            ash.application
            , u.name
            , ash.createddate
            , ROW_NUMBER() over (partition by ash.application order by ash.createddate desc) as rank
          from 
            cloudlending.application_status_history as ash
            inner join 
               (select 
                  name
                  , id
                from 
                  cloudlending.user
                where 
                  name in ('Cecily Rivera', 'Christa Busse', 'Fernanda Delgado', 'Jennifer Sher', 'Kendra Gonzalez', 'Reem Hindi', 'Zach Hurd', 'Joshua Huerta', 'Josh Moran', 'Areen Akel')
                ) as u
            on ash.createdbyid = u.id
          ) as with_rank
     where rank = 1
     ) as c_ash_uw
  on c_a.id = c_ash_uw.application

  left join 
     ( select distinct
        ash.application
        , 1 as manual_scorecard
      from 
        (	select 
            application
            , old_value
            , new_value
            , createddate
            , createdbyid
            --, ROW_NUMBER() over (partition by application order by createddate desc) as rank
          from 
            cloudlending.application_status_history
          where 
            old_value = 'BANK VERIFICATION COMPLETED'
            and new_value = 'NEW - SCORECARD GENERATED'
        ) as ash
        inner join 
          (	select 
              id
              , name 
            from 
              cloudlending.user
            where 
            name in ('Cecily Rivera', 'Christa Busse', 'Fernanda Delgado', 'Jennifer Sher', 'Kendra Gonzalez', 'Reem Hindi', 'Zach Hurd', 'Joshua Huerta', 'Josh Moran', 'Areen Akel')
          ) as u
          on ash.createdbyid = u.id
  --        where 
  --         rank = 1
    ) as c_ash_ms
  on c_a.id = c_ash_ms.application

  left join 
    (	select distinct
        app.id
        , 1 as kickback
      from 
        cloudlending.task as t
        inner join cloudlending.user as u
        on t.createdbyid = u.id
        inner join cloudlending.applications as app
        on app.id = t.application
        inner join cloudlending.contact as ct
        on app.contact = ct.id
      where
        u.name in ('Cecily Rivera', 'Christa Busse', 'Fernanda Delgado', 'Jennifer Sher', 'Kendra Gonzalez', 'Reem Hindi', 'Zach Hurd', 'Joshua Huerta', 'Josh Moran', 'Areen Akel') and
        description_c not in ('Other - Reminder/Review') and
        description_c is not null ) as c_t_kickback
  on c_a.id = c_t_kickback.id

  -- left join 
  --   ( select 
  --       s.application
  --       , sum(weighted_score) as uwscore
  --     from 
  --       (	select distinct 
  --           s.application
  --           , field_name
  --           , weighted_score
  --           , a.name
  --           , a.createddate
  --         from 
  --           cloudlending.application_s_scorecard as s
  --           inner join cloudlending.applications as a
  --           on s.application = a.id
  --           ) as s
  --           group by s.application) as c_s
  -- on c_a.id = c_s.application

  left join
    (
      select
        loanid
        , notescore as uwscore
      from
        public.all_notescore
    ) as c_s
    on p_aa.loanid = c_s.loanid


  left join 
    ( select
        *
      from 
        (SELECT 
              apps.id,
              app_history.createddate AS time_sent_UW,
              ROW_NUMBER() OVER (PARTITION BY apps.id ORDER BY app_history.createddate ASC) AS event_order
          FROM
              cloudlending.applications as apps INNER JOIN cloudlending.applications_history as app_history
              ON apps.id = app_history.parentid
          WHERE  
              app_history.newvalue = 'UW Queue' 
          ORDER BY apps.id DESC) AS tmp
      WHERE
        event_order = 1) as c_ah_uwq
  on c_a.id = c_ah_uwq.id

  /*
  left join ( select
                ap.id,
                ei.monthly_income
              from
                cloudlending.applications as ap
              inner join cloudlending.employment_information as ei
              on ap.id = ei.application
            ) as c_ei
  on c_a.id = c_ei.id
  */


order by p_aa.appldate desc