library(ggplot2)

levers = c(
    "1Previous FR", 
    "2Attempt/Q", 
    "2BV/Attempt", 
    "4Pass Scorecard", 
    "5Contract Signed", 
    "6Decisioned", 
    "7Funded/Decisioned", 
    "8New FR"
)

bridge = c(
    df$fundingrate[which(df$period == "P1")], 
    (df$attemptq[which(df$period == "P2")]-df$attemptq[which(df$period == "P1")])*prod(df[which(df$period == "P1"),4:8]), 
    (df$bvattempt[which(df$period == "P2")]-df$bvattempt[which(df$period == "P1")])*prod(df[which(df$period == "P1"),5:8])*prod(df[which(df$period == "P2"),3]), 
    (df$scorecardbv[which(df$period == "P2")]-df$scorecardbv[which(df$period == "P1")])*prod(df[which(df$period == "P1"),6:8])*prod(df[which(df$period == "P2"),3:4]), 
    (df$contractscorecard[which(df$period == "P2")]-df$contractscorecard[which(df$period == "P1")])*prod(df[which(df$period == "P1"),7:8])*prod(df[which(df$period == "P2"),3:5]), 
    (df$decisionedcontract[which(df$period == "P2")]-df$decisionedcontract[which(df$period == "P1")])*prod(df[which(df$period == "P1"),8])*prod(df[which(df$period == "P2"),3:6]), 
    (df$fundeddecisioned[which(df$period == "P2")]-df$fundeddecisioned[which(df$period == "P1")])*prod(df[which(df$period == "P2"),3:7]), 
    df$fundingrate[which(df$period == "P2")]
)

whitespace = c(
    0, 
    ifelse(bridge[2] >= 0, sum(bridge[1:1]), sum(bridge[1:2])), 
    ifelse(bridge[3] >= 0, sum(bridge[1:2]), sum(bridge[1:3])), 
    ifelse(bridge[4] >= 0, sum(bridge[1:3]), sum(bridge[1:4])), 
    ifelse(bridge[5] >= 0, sum(bridge[1:4]), sum(bridge[1:5])), 
    ifelse(bridge[6] >= 0, sum(bridge[1:5]), sum(bridge[1:6])), 
    ifelse(bridge[7] >= 0, sum(bridge[1:6]), sum(bridge[1:7])), 
    0
)

color = c(
    "orange", 
    ifelse(bridge[2] >= 0, "green", "red"), 
    ifelse(bridge[3] >= 0, "green", "red"), 
    ifelse(bridge[4] >= 0, "green", "red"), 
    ifelse(bridge[5] >= 0, "green", "red"), 
    ifelse(bridge[6] >= 0, "green", "red"), 
    ifelse(bridge[7] >= 0, "green", "red"), 
    "blue"
)

levers2 = rep(levers,2)
values = c(whitespace, abs(bridge))
category = c(rep("whitespace",8.24), rep("bridge",8))
color2 = c(rep("white",8), color)
values_format = c(rep("",length(levers)), paste(round(100*bridge, 2), '%', sep = ""))

df2 = data.frame(
    levers2, 
    values, 
    category, 
    color2, 
    values_format
)

ggplot(data = df2, mapping = aes(x = levers2, 
                                 y = values, 
                                 fill = color2, 
                                 alpha = color2)) + 
    geom_col() + 
    scale_fill_manual("legend", values = c("white" = "white", 
                                           "blue" = "deepskyblue", 
                                           "red" = "brown1", 
                                           "green" = "springgreen4", 
                                           "orange" = "deepskyblue3")) + 
    scale_alpha_manual(values = c("white" = 0, 
                                  "blue" = 1, 
                                  "red" = 1, 
                                  "green" = 1, 
                                  "orange" = "1")) + 
    scale_y_continuous(labels = scales::percent) + 
    geom_text(aes(label = values_format), position = "stack", vjust = -0.5) + 
    labs(x = "Levers", y = "%Q", title = paste("Funding Rate Bridge - Levers", 
                                               "\n", 
                                               "From ", 
                                               df$startdate[which(df$period == "P1")], 
                                               " to ", 
                                               df$enddate[which(df$period == "P1")], 
                                               "\n", 
                                               "Through ", 
                                               df$startdate[which(df$period == "P2")], 
                                               " to ", 
                                               df$enddate[which(df$period == "P2")])) + 
    theme(plot.title = element_text(hjust = 0.5), legend.position = "none")

periscope.image()