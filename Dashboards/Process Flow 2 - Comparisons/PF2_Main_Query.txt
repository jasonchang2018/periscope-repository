-- Last Update: 2018-10-16
with post_filters as
(
  select dict.*
  from [bizops_application_details as dict]
  where [newuploanreloan=LoanType]
  and [dict.adgrp=Source_Funding_Tree]
  and [dict.admethod=Admethod_Funding_Tree]
  and [dict.store=State]
  and [dict.BU=BU]
  and [dict.is_neuro_id<=Exclude_Neuro_ID]
  and [dict.APR_Group=APR_States_Funding_Tree]
  and [dict.payfreq=PayFreq_Funding_Tree]
)
select
  'P1' as period 
  , count(distinct case when qualified = 1 or [is_bcs_1>=Add_Back_BCS1] then loanid end)::numeric/count(distinct case when newentered = 1 then loanid end) as qualifyingrate
  , count(distinct case when bankverified = 1 then loanid end)::numeric/count(distinct case when qualified = 1 or [is_bcs_1>=Add_Back_BCS1] then loanid end) as bvq
  , count(distinct case when passscorecardratecard = 1 then loanid end)::numeric/count(distinct case when bankverified = 1 then loanid end) as scorecardbv
  , count(distinct case when contractsigned = 1 then loanid end)::numeric/count(distinct case when passscorecardratecard = 1 then loanid end) as contractscorecard
  , count(distinct case when cs_decisioned = 1 then loanid end)::numeric/count(distinct case when contractsigned = 1 then loanid end) as decisionedcontract
  , count(distinct case when funded = 1 then loanid end)::numeric/count(distinct case when cs_decisioned = 1 then loanid end) as fundeddecisioned
  , count(distinct case when funded = 1 then loanid end)::numeric/count(distinct case when qualified = 1 or [is_bcs_1>=Add_Back_BCS1] then loanid end) as fundingrate
  , '[P1_Start_Funding_Tree]' as startdate
  , '[P1_End_Funding_Tree]' as enddate
from 
  post_filters
where 
  [appldate::date>=P1_Start_Funding_Tree] 
  and [appldate::date<=P1_End_Funding_Tree]
group by
  period
  , startdate
  , enddate

union all

select
  'P2' as period 
  , count(distinct case when qualified = 1 or [is_bcs_1>=Add_Back_BCS1] then loanid end)::numeric/count(distinct case when newentered = 1 then loanid end) as qualifyingrate
  , count(distinct case when bankverified = 1 then loanid end)::numeric/count(distinct case when qualified = 1 or [is_bcs_1>=Add_Back_BCS1] then loanid end) as bvq
  , count(distinct case when passscorecardratecard = 1 then loanid end)::numeric/count(distinct case when bankverified = 1 then loanid end) as scorecardbv
  , count(distinct case when contractsigned = 1 then loanid end)::numeric/count(distinct case when passscorecardratecard = 1 then loanid end) as contractscorecard
  , count(distinct case when cs_decisioned = 1 then loanid end)::numeric/count(distinct case when contractsigned = 1 then loanid end) as decisionedcontract
  , count(distinct case when funded = 1 then loanid end)::numeric/count(distinct case when cs_decisioned = 1 then loanid end) as fundeddecisioned
  , count(distinct case when funded = 1 then loanid end)::numeric/count(distinct case when qualified = 1 or [is_bcs_1>=Add_Back_BCS1] then loanid end) as fundingrate
  , '[P2_Start_Funding_Tree]' as startdate
  , '[P2_End_Funding_Tree]' as enddate
from 
  post_filters
where 
  [appldate::date>=P2_Start_Funding_Tree] 
  and [appldate::date<=P2_End_Funding_Tree]
group by
  period
  , startdate
  , enddate