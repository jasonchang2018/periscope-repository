-- --yes_cache
with post_filters as
(
  select *
    , case
      when '[Aggregation_Level]' = 'Week' then (date_trunc('[Aggregation_Level]', dict.appldate + '1 day'::interval)::date -'1 day'::interval)::date 
      else date_trunc('[Aggregation_Level]', dict.appldate)::date end as timestart
  from [bizops_application_details as dict]
  where [dict.appldate>=Timestart_Funding_Tree]
  and [dict.appldate<=Timeend_Funding_Tree]
  and [newuploanreloan=LoanType]
  and [dict.adgrp=Source_Funding_Tree]
  and [dict.store=State]
  and [dict.BU=BU]
)
, all_decisions as
(
  select
    c_user.name
    , c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' as createddate
    , details.application
--     , row_number() over (partition by details.application order by c_ash.createddate desc) as rn
    , case  when c_user.name = 'Areen Akel' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-04-03' then 1
            when c_user.name = 'Josh Moran' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-06-12' then 1
            when c_user.name = 'Joshua Huerta' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-05-14'
              and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' <= '2018-07-30' then 1
            when c_user.name = 'Taylor Lee' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-07-24' then 1
            when c_user.name = 'Emerita Garcia' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-07-24' then 1
            when c_user.name = 'Paula Pantoja' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-07-31' then 1
            when c_user.name = 'Diamond Owens' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-09-18' then 1
            when c_user.name = 'Elexus McKay' and c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago' >= '2018-09-18' then 1
            when c_user.name in ('Jennifer Sher', 'Christa Busse', 'Fernanda Delgado', 'Kendra Gonzalez', 'Cecily Rivera', 'Zach Hurd', 'Reem Hindi') then 1
            else 0
            end as eligible 
  from
    post_filters as details
    inner join
      cloudlending.application_status_history as c_ash
      on details.application = c_ash.application
    inner join
      (
        select
          id
          , name
        from
          cloudlending.user
        where 
          name in ('Jennifer Sher', 'Christa Busse', 'Fernanda Delgado', 'Kendra Gonzalez', 'Cecily Rivera', 'Zach Hurd', 'Reem Hindi'
                   , 'Areen Akel', 'Josh Moran', 'Joshua Huerta', 'Taylor Lee', 'Emerita Garcia', 'Paula Pantoja', 'Diamond Owens', 'Elexus McKay')
      ) as c_user
      on c_ash.createdbyid = c_user.id
  where
    new_value in ('LOAN APPROVED', 'DENIED')
    and old_value <> new_value
)
, eligible_decisions_pre as
(
  select
    *  
    , row_number() over (partition by application order by createddate desc) as rn
  from
    all_decisions
  where
    eligible = 1
)
, eligible_decisions as
(
  select
    *  
  from
    eligible_decisions_pre
  where
    rn = 1
)
, defaults as
(
  select 
    ed.name
--     , l.approvedate
    , ed.createddate as approvedate
    , ed.application
    , details.denygrp
    , case  when l.origduedate::Date < date_trunc('month',current_date)::Date and firstpmt is null then 1
            when firstpmt > l.origduedate + interval '2 day' and totpmt < 2 * firstpayamt then 1
            else 0
            end as isFPD
  from 
    post_filters as details
    inner join 
      eligible_decisions as ed
      on details.application = ed.application
    inner join
        public.all_loans as l
        on details.loanid = l.loanid
    left join 
      (
        select 
          loanid,
          min(pmtdate /*at time zone 'gmt' at time zone 'cdt'*/)::Date as firstpmt,
          sum(pmtamt) as totpmt
        from 
          public.all_payments as p
        where 
          reversed = 0 and pmtamt > 10
        group by loanid
      ) as fpd 
      on fpd.loanid=l.loanid
--   where 
--     l.approvedate::date>='2017-10-01'
)
, defaults_monthly as
(
  select
    date_trunc('month', approvedate)::date as approve_month
    , count(distinct application) as decisions
    , count(distinct case when "left"(denygrp,1) = '9' then application end) as approvals
    , count(distinct case when isFPD = 1 then application end) as fpd
  from
    defaults
  group by
    approve_month
)  
select
  d.approve_month
  , d.fpd
  , d.approvals
  , d.decisions
  , round(d.fpd::numeric/d.approvals,4) as "%FPD"
  , round(d.fpd::numeric/d.approvals,4) as "%FPD (line)"
from
  defaults_monthly as d
where
  d.approve_month >= '2017-10-01'