-- Last Update: 2018-11-06
with post_filters as
(
  select dict.*
    , case
      when '[Aggregation_Level]' = 'Week' then (date_trunc('[Aggregation_Level]', dict.appldate + '1 day'::interval)::date -'1 day'::interval)::date 
      else date_trunc('[Aggregation_Level]', dict.appldate)::date end as timestart
  from
    (
      select
        *
        , case  when [Include_Night_Shift] = 1
                and dict.processadmin in 
                  (
                    'Alma Martinez'
                    , 'Amiee Moss'
                    , 'Ana Saavedra'
                    , 'Ana Tejeda'
                    , 'Anais Garza'
                    , 'Anais Santana'
                    , 'Damary Gonzalez'
                    , 'Diana Ruiz'
                    , 'Faith Harris'
                    , 'Gustavo Perez'
                    , 'Holly Demons'
                    , 'Ivan Cirkovic'
                    , 'Jacinthia Gonzalez'
                    , 'Jennifer Mendez'
                    , 'Jessica Robinson'
                    , 'Karen Cohn'
                    , 'Keena Hannon'
                    , 'Kelly Blackmon'
                    , 'Kristine Garcia'
                    , 'Lauren Mason'
                    , 'Marquita Gill'
                    , 'Nia Albertson'
                    , 'Raven Holmes'
                    , 'Shellie Gonzalez'
                    , 'Tim Mannix'
                    , 'Voula Eikosidekas'
                    , 'Yovana Roy'
                  )
                then 1
                when [Include_Day_Shift] = 1
                and dict.processadmin not in 
                  (
                    'Alma Martinez'
                    , 'Amiee Moss'
                    , 'Ana Saavedra'
                    , 'Ana Tejeda'
                    , 'Anais Garza'
                    , 'Anais Santana'
                    , 'Damary Gonzalez'
                    , 'Diana Ruiz'
                    , 'Faith Harris'
                    , 'Gustavo Perez'
                    , 'Holly Demons'
                    , 'Ivan Cirkovic'
                    , 'Jacinthia Gonzalez'
                    , 'Jennifer Mendez'
                    , 'Jessica Robinson'
                    , 'Karen Cohn'
                    , 'Keena Hannon'
                    , 'Kelly Blackmon'
                    , 'Kristine Garcia'
                    , 'Lauren Mason'
                    , 'Marquita Gill'
                    , 'Nia Albertson'
                    , 'Raven Holmes'
                    , 'Shellie Gonzalez'
                    , 'Tim Mannix'
                    , 'Voula Eikosidekas'
                    , 'Yovana Roy'
                  )
                then 1
                else 0
                end as eligible
      from
        [bizops_application_details as dict]
    ) as dict
    inner join cloudlending.user as c_user on upper(dict.processadmin) = upper(c_user.name)
  where [dict.appldate>=Timestart_Funding_Tree]
  and [dict.appldate<=Timeend_Funding_Tree]
  and [newuploanreloan=LoanType]
  and [dict.adgrp=Source_Funding_Tree]
  and [dict.admethod=Admethod_Funding_Tree]
  and [dict.store=State]
  and [dict.BU=BU]
  and [dict.is_neuro_id<=Exclude_Neuro_ID]
  and [dict.APR_Group=APR_States_Funding_Tree]
  and [dict.payfreq=PayFreq_Funding_Tree]
  and c_user.supervisor notnull
  and [c_user.supervisor=Supervisor]
  and dict.processadmin not in ('Marcel Barnett')
  and dict.eligible = 1
)
select
  pf.processadmin
  , '1 Attempt IBV/Q' as "Metric"
  , coalesce(count(distinct case when pf.attempt_ibv = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.qualified = 1 or [pf.is_bcs_1>=Add_Back_BCS1] then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull
group by
  processadmin
  , "Metric"
having
  max(contractsigned) = 1 --Peter Proczek


union all


select
  pf.processadmin
  , '2 BV/Attempt IBV' as "Metric"
  , coalesce(count(distinct case when pf.bankverified = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.attempt_ibv = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull
group by
  processadmin
  , "Metric"
having
  max(contractsigned) = 1 --Peter Proczek


union all


select
  pf.processadmin
  , '3 SC/BV' as "Metric"
  , coalesce(count(distinct case when pf.passscorecardratecard = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.bankverified = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull
group by
  processadmin
  , "Metric"
having
  max(contractsigned) = 1 --Peter Proczek


union all


select
  pf.processadmin
  , '4 CS/SC' as "Metric"
  , coalesce(count(distinct case when pf.contractsigned = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.passscorecardratecard = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull
group by
  processadmin
  , "Metric"
having
  max(contractsigned) = 1 --Peter Proczek


union all


select
  pf.processadmin
  , '5 Decisioned/CS' as "Metric"
  , coalesce(count(distinct case when pf.cs_decisioned = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.contractsigned = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull
group by
  processadmin
  , "Metric"
having
  max(contractsigned) = 1 --Peter Proczek


union all


select
  pf.processadmin
  , '6 F/Decisioned' as "Metric"
  , coalesce(count(distinct case when pf.funded = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.cs_decisioned = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull
group by
  processadmin
  , "Metric"
having
  max(contractsigned) = 1 --Peter Proczek


union all


select
  'ALL' as processadmin
  , '1 Attempt IBV/Q' as "Metric"
  , coalesce(count(distinct case when pf.attempt_ibv = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.qualified = 1 or [pf.is_bcs_1>=Add_Back_BCS1] then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull


union all


select
  'ALL' as processadmin
  , '2 BV/Attempt IBV' as "Metric"
  , coalesce(count(distinct case when pf.bankverified = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.attempt_ibv = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull


union all


select
  'ALL' as processadmin
  , '3 SC/BV' as "Metric"
  , coalesce(count(distinct case when pf.passscorecardratecard = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.bankverified = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull


union all


select
  'ALL' as processadmin
  , '4 CS/SC' as "Metric"
  , coalesce(count(distinct case when pf.contractsigned = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.passscorecardratecard = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull


union all


select
  'ALL' as processadmin
  , '5 Decisioned/CS' as "Metric"
  , coalesce(count(distinct case when pf.cs_decisioned = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.contractsigned = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull


union all


select
  'ALL' as processadmin
  , '6 F/Decisioned' as "Metric"
  , coalesce(count(distinct case when pf.funded = 1 then pf.loanid end)::numeric/nullif(count(distinct case when pf.cs_decisioned = 1 then pf.loanid end),0),0) as "Value"
from
  post_filters as pf
where
  processadmin notnull



order by
  "Metric" asc
  , processadmin asc