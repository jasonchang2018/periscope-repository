--yes_cache
-- Last Update: 2018-10-16
with post_filters as
(
  select dict.*
  from [bizops_application_details as dict]
  where [newuploanreloan=LoanType]
  and [dict.adgrp=Source_Funding_Tree]
  and [dict.admethod=Admethod_Funding_Tree]
  and [dict.store=State]
  and [dict.BU=BU]
  and [dict.is_neuro_id<=Exclude_Neuro_ID]
)
, cs as
(
  select distinct
    application
  from
    cloudlending.application_status_history
  where
    new_value = 'CONTRACT SIGNED'
)
, decisioned as
(
  select
    application
    , max(c_ash.createddate at time zone 'GMT' at time zone 'America/Chicago') as createddate
  from 
    cloudlending.application_status_history as c_ash
  where
    new_value in ('DENIED','LOAN APPROVED')
    and new_value != old_value
  group by
    application
)
select
  case
    when '[Aggregation_Level]' = 'Week' then (date_trunc('[Aggregation_Level]', d.createddate + '1 day'::interval)::date -'1 day'::interval)::date 
    else date_trunc('[Aggregation_Level]', d.createddate)::date 
    end as timestart
  , extract('hour' from date_trunc('hour', d.createddate))::int as hour
  , count(distinct pf.loanid) as freq
from
  post_filters as pf
  inner join
    (
      select
        *
      from
        cloudlending.applications
      where
        denialreason not in ('Time In Pending','Withdraw')
        or denialreason isnull
    ) as c_app
    on pf.application = c_app.id
  inner join
    cs
    on pf.application = cs.application
  left join
    decisioned as d
    on pf.application = d.application
where 
  [d.createddate::date>=Timestart_Funding_Tree]
  and [d.createddate::date<=Timeend_Funding_Tree]
group by
  timestart
  , hour
order by
  hour desc
  


  
-- select
--   case
--     when '[Aggregation_Level]' = 'Week' then (date_trunc('[Aggregation_Level]', c_ash.createddate + '1 day'::interval)::date -'1 day'::interval)::date 
--     else date_trunc('[Aggregation_Level]', c_ash.createddate)::date 
--     end as timestart
--   , extract('hour' from date_trunc('hour', c_ash.createddate))::int as hour
--   , count(distinct pf.loanid) as freq
-- from
--   post_filters as pf
--   left join
--     (
--       select
--         application
--         , min(createddate at time zone 'GMT' at time zone 'America/Chicago') as createddate
--       from
--         cloudlending.application_status_history as c_ash
--       where
--         old_value = 'WAITING ON STIPULATIONS'
--         and new_value = 'CONTRACT SIGNED'
--       group by
--         application
--     ) as c_ash
--     on pf.application = c_ash.application
-- where 
--   [c_ash.createddate::date>=Timestart_Funding_Tree]
--   and [c_ash.createddate::date<=Timeend_Funding_Tree]
-- group by
--   timestart
--   , hour
-- order by
--   hour desc